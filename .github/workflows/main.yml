name: Build and Deploy Spring Boot Docker App

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Set up Java
        uses: actions/setup-java@v4.2.0
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Spring Boot JAR with Gradle
        run: |
          chmod +x ./gradlew
            ./gradlew clean build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest
          docker build -t $IMAGE .
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Push Docker image to Docker Hub
        run: docker push $IMAGE

      - name: Save private key for EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem

      - name: Copy docker-compose.yml file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "./docker-compose.yml"
          target: "/home/ubuntu/"

  cd-pipelines:
    needs: test-and-build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        id: deploy
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            sudo docker-compose down --rmi all
            sudo docker-compose up -d